.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "M_TRIE_REMOVE" "3" "June 2017" "lovasko" "m_trie"
.
.SH "NAME"
\fBm_trie_remove\fR \- remove one or more keys from the trie
.
.SH "LIBRARY"
m_trie (\-lmtrie)
.
.SH "SYNOPSIS"
\fB#include <m_trie\.h>\fR
.
.P
\fBint\fR \fIm_trie_remove\fR(\fBm_trie*\fR \fItr\fR, \fBuint8_t*\fR \fIkey\fR, \fBuint32_t\fR \fIlen\fR, uint8_t pfix); \fBint\fR \fIm_trie_remove_all\fR(\fBm_trie*\fR \fItr\fR);
.
.SH "DESCRIPTION"
The \fIm_trie_remove\fR function removes a specified \fIkey\fR from the \fItrie\fR\. This function merely tags the internal tree node as free and does not perform the actual deallocation of the memory due to performance reasons\. To trigger the resource deallocation process, use the \fIm_trie_trim\fR function\.
.
.SH "TIME COMPLEXITY"
\fBO\fR(\fIk\fR), where \fIk\fR is the length of the longest key in the \fItr\fRie\.
.
.SH "SPACE COMPLEXITY"
\fBO\fR(1)\.
.
.SH "TIME COMPLEXITY (PREFIX MODE & ALL)"
\fBO\fR(\fIn\fR), where \fIn\fR is the overall number of nodes in the \fItr\fRie\.
.
.SH "SPACE COMPLEXITY (PREFIX MODE & ALL)"
\fBO\fR(\fIk\fR), where \fIk\fR is the length of the longest key in the \fItr\fRie\.
.
.SH "RETURN VALUES"
.
.TP
M_TRIE_OK
Success\.
.
.TP
M_TRIE_E_NULL
\fItrie\fR and/or \fIkey\fR are \fBNULL\fR\.
.
.TP
M_TRIE_E_INVALID
\fIkey\fR contains invalid characters\.
.
.TP
M_TRIE_E_LENGTH
\fIlen\fR is zero\.
.
.SH "SEE ALSO"
m_trie_insert(3), m_trie_trim(3)
