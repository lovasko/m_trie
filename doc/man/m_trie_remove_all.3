.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "M_TRIE_REMOVE_ALL" "3" "March 2017" "lovasko" "m_trie"
.
.SH "NAME"
\fBm_trie_remove_all\fR \- remove all keys from the trie
.
.SH "LIBRARY"
m_trie (\-lmtrie)
.
.SH "SYNOPSIS"
\fB#include <m_trie\.h>\fR
.
.P
\fBint\fR
.
.br
\fIm_trie_remove_all\fR(\fBm_trie*\fR \fItrie\fR)
.
.SH "DESCRIPTION"
The \fIm_trie_remove_all\fR function removes all keys from the \fItrie\fR\. This function merely tags the internal tree node as free and does not perform the actual deallocation of the memory due to performance reasons\. To trigger the resource deallocation process, use the \fIm_trie_trim\fR function\.
.
.SH "TIME COMPLEXITY"
\fBO\fR(\fIlh\fR), where \fIl\fR is the length of the longest key that was inserted in the \fItrie\fR and \fIh\fR is the number of accepted bytes by the hash function\.
.
.SH "RETURN VALUES"
.
.TP
M_TRIE_OK
success
.
.TP
M_TRIE_E_NULL
\fItrie\fR is \fBNULL\fR
.
.SH "SEE ALSO"
m_trie_remove(3), m_trie_trim(3)
